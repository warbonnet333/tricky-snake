{"version":3,"sources":["webpack:///./snake.js","webpack:///./index.js"],"names":["c","document","querySelector","ctx","getContext","itemSize","width","score","game","this","snake","x","y","xDir","yDir","apple","interval","draw","fillStyle","length","i","j","height","fillRect","clear","clearRect","update","createApple","drawApple","eatApple","isBumpCheck","directArrow","e","code","appleX","Math","floor","random","appleY","grow","unshift","changeScore","k","bump","clearInterval","window","removeEventListener","event","setTimeout","start","innerHTML","internal","addEventListener","setInterval","console","dir"],"mappings":"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","file":"main.f70a257da966be18293e.js","sourcesContent":["const c = document.querySelector(\"canvas\");\r\nconst ctx = c.getContext(\"2d\");\r\nconst coloumnsQuantity = 20 //кількість колон ан канвасі\r\nconst itemSize = c.width / coloumnsQuantity //розмір клітинки \r\nconst score = document.querySelector(\".score_num\")\r\n\r\nexport default class Snake {\r\n    constructor() {\r\n        this.snake = [{ x: 0, y: 0 }, { x: 0, y: 0 }]\r\n        this.xDir = 1\r\n        this.yDir = 0\r\n        this.apple = null\r\n        this.interval = null\r\n    }\r\n\r\n    draw() {\r\n        ctx.fillStyle = 'green'\r\n        this.snake[this.snake.length - 1].x += itemSize * this.xDir\r\n        this.snake[this.snake.length - 1].y += itemSize * this.yDir\r\n\r\n        for (let i = 0; i < this.snake.length; i++) {\r\n\r\n            if (this.snake[i + 1]) {\r\n                this.snake[i].x = this.snake[i + 1].x\r\n                this.snake[i].y = this.snake[i + 1].y\r\n            }\r\n\r\n            for (let j = 0; j < this.snake.length; j++) {\r\n\r\n                if (this.snake[j].x >= c.width) {\r\n                    this.snake[j].x = 0\r\n                } else if (this.snake[j].x < 0) {\r\n                    this.snake[j].x = c.width - itemSize\r\n                } else if (this.snake[j].y >= c.height) {\r\n                    this.snake[j].y = 0\r\n                } else if (this.snake[j].y < 0) {\r\n                    this.snake[j].y = c.height - itemSize\r\n                }\r\n\r\n                ctx.fillRect(this.snake[j].x, this.snake[j].y, itemSize, itemSize)\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        ctx.clearRect(0, 0, c.width, c.height)\r\n    }\r\n\r\n    update() {\r\n        this.clear()\r\n        if (!this.apple) this.createApple()\r\n        this.drawApple()\r\n        this.draw()\r\n\r\n        if (this.snake[this.snake.length - 1].x === this.apple.x && this.snake[this.snake.length - 1].y === this.apple.y) {\r\n            this.eatApple()\r\n        }\r\n        this.isBumpCheck()\r\n    }\r\n\r\n    directArrow(e) {\r\n\r\n        switch (e.code) {\r\n            case \"ArrowDown\":\r\n\r\n                if (this.yDir === -1) {\r\n                    break;\r\n                }\r\n\r\n                this.xDir = 0\r\n                this.yDir = 1\r\n                break;\r\n            case \"ArrowUp\":\r\n\r\n                if (this.yDir === 1) {\r\n                    break;\r\n                }\r\n\r\n                this.xDir = 0\r\n                this.yDir = -1\r\n                break;\r\n            case \"ArrowLeft\":\r\n\r\n                if (this.xDir === 1) {\r\n                    break;\r\n                }\r\n\r\n                this.xDir = -1\r\n                this.yDir = 0\r\n                break;\r\n            case \"ArrowRight\":\r\n\r\n                if (this.xDir === -1) {\r\n                    break;\r\n                }\r\n\r\n                this.xDir = 1\r\n                this.yDir = 0\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    createApple() {\r\n        const appleX = Math.floor(Math.random() * coloumnsQuantity) * itemSize\r\n        const appleY = Math.floor(Math.random() * coloumnsQuantity) * itemSize\r\n        this.apple = {\r\n            x: appleX,\r\n            y: appleY\r\n        }\r\n    }\r\n\r\n    drawApple() {\r\n        ctx.fillStyle = \"#FF2525\"\r\n        ctx.fillRect(this.apple.x, this.apple.y, itemSize, itemSize)\r\n    }\r\n\r\n    grow() {\r\n        let obj = {\r\n            x: null,\r\n            y: null\r\n        }\r\n\r\n        this.snake.unshift(obj)\r\n    }\r\n\r\n    eatApple() {\r\n        this.createApple()\r\n        this.grow()\r\n        this.changeScore()\r\n    }\r\n\r\n    isBumpCheck() {\r\n        for (let k = 0; k < this.snake.length - 3; k++) {\r\n            const isBump = this.snake[k].x === this.snake[this.snake.length - 1].x && this.snake[k].y === this.snake[this.snake.length - 1].y\r\n            if (isBump) {\r\n                this.bump()\r\n            }\r\n        }\r\n    }\r\n\r\n    bump() {\r\n        clearInterval(this.interval)\r\n        window.removeEventListener(\"keydown\", () => this.directArrow(event))\r\n        setTimeout(() => this.start(), 3000)\r\n    }\r\n\r\n    changeScore() {\r\n        score.innerHTML = this.snake.length - 1\r\n    }\r\n\r\n    start() {\r\n        this.snake = [{ x: 0, y: 0 }, { x: 0, y: 0 }]\r\n        this.xDir = 1\r\n        this.yDir = 0\r\n        this.apple = null\r\n        this.internal = null\r\n        score.innerHTML = 1\r\n        window.addEventListener(\"keydown\", () => this.directArrow(event))\r\n        this.interval = setInterval(() => this.update(), 150)\r\n    }\r\n}","import './styles.css';\nimport Snake from \"./snake\"\n\n\n\nconst game = new Snake()\n\ngame.start()\n\ngame.changeScore(score)\n\n\n\nconsole.dir(score.innerHTML)"],"sourceRoot":""}